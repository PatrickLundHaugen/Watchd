// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  favorites Favorite[]
  recents   Recent[]
  movies    UserMovie[]
  series    UserSeries[]
}

model Favorite {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tmdbId    Int
  mediaType String
  label     String?
  position  Int
  createdAt DateTime @default(now())

  @@unique([userId, position])
}

model Recent {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tmdbId    Int
  mediaType String
  createdAt DateTime @default(now())
}

model UserMovie {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tmdbId    Int
  label     String
  createdAt DateTime @default(now())
}

model UserSeries {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  tmdbId    Int
  label     String
  createdAt DateTime @default(now())
}

